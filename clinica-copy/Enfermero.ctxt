#BlueJ class context
comment0.target=Enfermero
comment0.text=\r\n\ \r\n\r\n\ @author\ (Francisco\ Sanchez)\r\n\ @version\ (0.1)\r\n\ \r\n\ \r\n\ \r\n\ Funciones\ del\ enfermero\:\r\n\ \r\n\ -Visualizacion\ de\ datos\ de\ los\ pacientes\ asignados\r\n\ \r\n\ -Registro\ y\ actualizacion\ de\ pruebas\ diagnosticas\ y\ vacunacion\r\n\ \r\n
comment1.params=DNI\ clinica
comment1.target=Enfermero(int,\ Clinica)
comment1.text=\r\n\ Constructor\ de\ la\ clase\ enfermero,\ requiere\ el\ identificador\ unico\r\n\ el\ la\ clinica\ como\ lugar\ de\ trabajo\r\n\ @param\ DNI\ identificador\r\n\ @param\ clinica\ lugar\ de\ trabajo\r\n
comment10.params=
comment10.target=boolean\ planSemanal_espacioLibre()
comment10.text=\r\n\ metodo\ sobreescrito\ de\ la\ funcion\ padre,\ aplica\ las\ restricciones\r\n\ pertinentes\ a\ la\ clase\ enfermero,\ valor\ almacenado\ en\ clase\ estatico\r\n
comment11.params=x
comment11.target=boolean\ planSemanal_espacioLibre(int)
comment11.text=\r\n\ metodo\ sobreescrito,\ aplica\ una\ restriccion\ diferente\ a\ los\ limites\ de\ trabajo\r\n
comment12.params=x
comment12.target=void\ aceptar_Tratamiento(Tratamiento)
comment12.text=\r\n\ metodo\ sobreescrito\ de\ la\ clase\ padre,\ hace\ comprobaciones\ extra\ y\ redirige\r\n\ el\ tratamiento\ a\ la\ lista\ adecuada\r\n
comment2.params=clinica\ DNI\ nombre\ apellido1\ apellido2\ edad
comment2.target=Enfermero(Clinica,\ int,\ java.lang.String,\ java.lang.String,\ java.lang.String,\ int)
comment2.text=\r\n\ Constructor\ sobrecargado\ para\ crear\ un\ enfermero\ con\ todos\ los\ datos\r\n\ suministrado\ por\ parametro,\ sin\ uso\ en\ el\ programa\ final\ pero\ util\ para\r\n\ las\ opciones\ de\ debug\ y\ pruebas.\r\n\ \r\n\ @param\ clinica\ lugar\ de\ trabajao\r\n\ @param\ DNI\ identificador\ unico\r\n\ @param\ nombre\ nombre\ del\ enfermero\r\n\ @param\ apellido1\ apellido\ del\ enfermero\r\n\ @param\ apellido2\ segundo\ apellido\ del\ enfermero\r\n\ @param\ edad\ edad\ del\ enfermero\r\n\ \r\n
comment3.params=
comment3.target=int\ vacunacionesRestantes()
comment3.text=\r\n\ Devuelve\ el\ tamanho\ de\ la\ lista\ de\ vacunaniones\r\n\ @return\ size\r\n
comment4.params=z
comment4.target=void\ vacunar(Vacunas)
comment4.text=\r\n\ Implementacion\ de\ la\ accion\ de\ vacunar\ a\ un\ paciente,\ necesita\ como\ parametro\ una\ \r\n\ vacuna\ que\ no\ este\ vacia,\ en\ base\ a\ los\ valores\ de\ esta\ procede\ a\ eliminarla\r\n\ de\ la\ lista\ de\ vacunas\ pendientes.\ En\ la\ actualidad\ no\ comprueba\ la\ coherencia\r\n\ con\ el\ estado\ de\ vacunacion\ del\ paciente\ y\ esto\ podria\ ser\ una\ opcion\ valida\ a\r\n\ implementar\ en\ el\ futuro.\ actual\ version\ (0.1)\r\n
comment5.params=
comment5.target=void\ trabajarVacuna()
comment5.text=\r\n\ Trabaja\ la\ lista\ de\ trabajos\ de\ vacunacion\ por\ completo,\ comprueba\ la\r\n\ posiblidad\ de\ vacunar\ antes\ de\ proceder\r\n\ @pre\ vacuna\ no\ este\ vacio,\ paciente\ pueda\ vacunarse\r\n
comment6.params=pruebaApaciente
comment6.target=void\ realizar_Prueba(Pruebas)
comment6.text=\r\n\ Metodo\ que\ formaliza\ la\ accion\ de\ realizar\ la\ prueba,\ cambia\ el\ estado\r\n\ de\ la\ prueba\ a\ ejecutado,\ podria\ haber\ sido\ sobrecargado\ para\ aceptar\r\n\ polimorfismo\ con\ respecto\ al\ parametro\ (al\ trabajador)\r\n\ pero\ por\ semantica\ me\ ha\ parecido\ que\ era\ mejor\ mantener\r\n\ los\ metodos\ separados,\ el\ de\ realizar\ la\ prueba\ en\ si\ y\ el\ de\ analizarla.\r\n\ El\ metodo\ esta\ sobreescrito\ en\ cada\ subclase\ y\ se\ accede\ al\ apropiado\r\n\ en\ tiempo\ de\ ejecucion.\r\n\ \r\n\ version\ (0.1)\r\n\ @param\ pruebaApaciente\ una\ prueba\ del\ enfermero\r\n\ @param\ enfermero\ el\ segundo\ parametro\ se\ contempla\ en\ el\ metodo\ de\ la\ prueba.\r\n\ \ \ \ \ \ \ \ requiere\ de\ enfermero\ como\ parametro\ para\ poder\ realizar\ la\ prueba.\r\n
comment7.params=x
comment7.target=void\ remove_Tratamiento(Tratamiento)
comment7.text=\r\n\ metodo\ sobrecargado\ de\ la\ clase\ padre\ persona.\ Como\ el\ enfermero\ tiene\ una\ lista\r\n\ de\ vacunas\ es\ necesaria\ la\ posibilidad\ de\ borrar\ los\ elementos\ de\ esta\ lista\ tambien\r\n\ y\ de\ mandar\ una\ alerta\ al\ modulo\ de\ vacunacion\ para\ buscar\ la\ ficha\ en\ este\ modulo\r\n\ y\ poder\ eliminarla\ acordemente.\ En\ esta\ version\ el\ modulo\ de\ vacunacion\ no\ esta\r\n\ completamente\ terminado.\r\n\ version\ (0.1)\r\n\ @param\r\n
comment8.params=
comment8.target=void\ trabajarPrueba()
comment8.text=\r\n\ metodo\ que\ hace\ trabajar\ al\ enfermero\ en\ su\ lista\ de\ trabajos\ semanal\r\n
comment9.params=x
comment9.target=void\ add_Tratamiento(Tratamiento)
comment9.text=\r\n\ Metodo\ sobrecargado\ de\ la\ clase\ padre\ Trabajador.\r\n\ El\ enfermero\ tiene\ dos\ colas\ de\ tratamientos,\ una\ para\ las\ vacunas\ y\ otra\r\n\ para\ el\ plan\ semanal.\ Este\ metodo\ deberia\ de\ lanzar\ una\ excepcion\ que\ pueda\r\n\ ser\ manejada\ por\ la\ funcion\ llamante\ en\ caso\ de\ que\ el\ enfermero\ rechaze\ la\ orden\r\n\ En\ la\ version\ actual\ esta\ funcion\ no\ esta\ implementada.\ Deberia\ de\ hacerse\ las\ pertinentes\r\n\ comprobaciones\ antes\ de\ hacer\ uso\ de\ esta\ funcion.\r\n\ @throw\ noImplementado\r\n\ @param\ x\ tratamiento\ a\ aceptar.\r\n
numComments=13
