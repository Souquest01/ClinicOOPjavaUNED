#BlueJ class context
comment0.target=estatico
comment0.text=\r\n\ Clase\ que\ almacena\ funciones,\ metodos\ y\ parametros\ de\ utilidad\ general\r\n\ en\ el\ programa.\ Permite\ centralizar\ y\ parametrizar\ el\ programa\ de\ acorde\r\n\ a\ las\ exigencias\ que\ se\ puedan\ presentar,\ como\ un\ cambio\ en\ el\ tiempo\ entre\r\n\ vacunas\r\n\r\n\ @author\ (Francisco\ Sanchez)\r\n\ @version\ (0.1)\r\n
comment1.params=
comment1.target=estatico()
comment1.text=\r\n\ constructor,\ privado,\ esta\ clase\ no\ representa\ ningun\ objeto\ en\ si\ misma\r\n
comment10.params=
comment10.target=int\ pedirNumero()
comment10.text=\r\n\ Funcion\ que\ pide\ una\ secuencia\ numerica\ a\ un\ usuario\ y\ la\ suministra\ al\ programa,\ esta\ version\ no\ tiene\ restriccion\ en\ cuanto\r\n\ rango\ de\ numeros,\ mientras\ sea\ un\ numero.\r\n\ @return\ entradaInt\ el\ numero\ introducido\ por\ el\ usuario\r\n
comment11.params=inicio\ ultimo
comment11.target=int\ pedirNumero(int,\ int)
comment11.text=\r\n\ Funcion\ que\ pide\ una\ secuencia\ numerica\ a\ un\ usuario\ y\ la\ suministra\ al\ programa,\ esta\ version\ tiene\ restriccion\ en\ cuanto\r\n\ rango\ de\ numeros,\ primer\ valor\ representa\ el\ inicio\ y\ el\ segundo\ el\ final.\r\n\ @return\ entradaInt\ el\ numero\ introducido\ por\ el\ usuario\r\n
comment12.params=
comment12.target=void\ print_imp()
comment12.text=\r\n\ imprime\ un\ marco\ para\ la\ visualizacion\ posterior\ de\ datos\ persona\r\n
comment13.params=
comment13.target=java.lang.String\ pedirTexto()
comment13.text=\r\n\ Pide\ una\ cadena\ de\ caracteres\ al\ usuario\ para\ suministrarla\ en\ otros\ puntos\ de\ programa,\r\n\ como\ en\ nombres\ o\ apellidos.\ Esta\ version\ no\ tiene\ restricciones\ en\ la\ actual\ version\ (0.1)\r\n
comment14.params=
comment14.target=boolean\ pedirConfirmacion()
comment14.text=\r\n\ Pide\ una\ confirmacion\ al\ usuario,\ devuelve\ true\ o\ false.\r\n\ @return\ boolean\ confirmacion\r\n
comment2.params=
comment2.target=boolean\ resultadoTest()
comment2.text=\r\n\ funcion\ que\ devuelve\ un\ resultado\ positivo\ o\ negativo\r\n\ en\ base\ a\ un\ numero\ random\ y\ a\ 3\ posibilidades\ entre\ 10,\r\n\ representando\ la\ probabilidad\ que\ tienes\ de\ dar\ positivo\ en\ el\ test\r\n
comment3.params=
comment3.target=int\ resultadoAnticuerpos()
comment3.text=\r\n\ Devuelve\ el\ resultado\ de\ anticuerpos\ en\ base\ a\ 100\r\n\ @return\ int\ anticuerpos\r\n
comment4.params=ventana
comment4.target=int\ numeroRandom(int)
comment4.text=\r\n\ generador\ de\ numeros\ aleatorios\r\n\ @param\ ventana\ indica\ la\ ultima\ cifra\ generable;\ 0\ es\ posibilidad\r\n\ return\ numeroRandom\r\n
comment5.params=ClinicaSanPedro
comment5.target=BBDD\ carga_bbdd_prueba(Clinica)
comment5.text=\r\n\ metodo\ de\ apoyo\ para\ el\ modo\ de\ test\ (o\ debug)\r\n\ Carga\ usuarios\ en\ una\ base\ de\ datos,\ se\ apoya\ de\ las\ funciones\ de\ generacion\r\n\ de\ numeros\ aleatorios\ de\ la\ clase\ estatico\r\n\ @return\ baseDatos\r\n
comment6.params=ClinicaSanPedro\ baseDatos\ multiplicador
comment6.target=void\ cargaPacientes(Clinica,\ BBDD,\ int)
comment7.params=ClinicaSanPedro\ baseDatos\ multiplicador
comment7.target=void\ cargaEnfermeros(Clinica,\ BBDD,\ int)
comment8.params=ClinicaSanPedro\ baseDatos\ multiplicador
comment8.target=void\ cargaTecnicos(Clinica,\ BBDD,\ int)
comment9.params=ClinicaSanPedro\ baseDatos
comment9.target=void\ cargaPruebasBBDD(Clinica,\ BBDD)
numComments=15
